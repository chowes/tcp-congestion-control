axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line()
queue_graph
library(ggplot2)
dctcp_queue_data <- read.csv(file = "/home/colin/Documents/School/tcp-congestion-control/tests/results/dctcp_queue.csv", na.strings = c("NA"), header = FALSE)
library(ggplot2)
dctcp_queue_data <- read.csv(file = "/home/colin/Documents/School/tcp-congestion-control/tests/results/dctcp_queue.csv", na.strings = c("NA"), header = FALSE)
reno_queue_data <- read.csv(file = "/home/colin/Documents/School/tcp-congestion-control/tests/results/reno_queue.csv", na.strings = c("NA"), header = FALSE)
dctcp_start <- dctcp_queue_data[1, 1]
reno_start <- reno_queue_data[1, 1]
dctcp_queue_data[,1] = dctcp_queue_data[,1] - dctcp_start
reno_queue_data[,1] = reno_queue_data[,1] - reno_start
queue_data = data.frame("cong_ctl"=c(rep("reno", length(reno_queue_data[,1])), rep("dctcp", length(dctcp_queue_data[,1]))), "queue_len"=c(reno_queue_data[,2], dctcp_queue_data[,2]), "time"=c(reno_queue_data[,1], dctcp_queue_data[,1]))
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line()
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
theme_bw() +
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
theme_bw()
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
theme_bw()
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw()
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(plot.title = element_text(colour="black", size=30, margin = margin(60, 0, 0, 0), face="bold"),
axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 26, colour = "black", face = "bold"),
legend.title = element_text(size = 28, colour = "black", face = "bold"),
legend.key = element_blank(),
legend.key.size = unit(3.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 26, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(3.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_blank(),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(3.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual("", limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_blank(),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(3.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual("Congestion Control", limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_blank(),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(3.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 26, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(3.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 26, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 26, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_text(size=26, face="bold"),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_text(size=26, margin = margin(30, 0, 0, 0), face="bold"),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=26, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_text(size=26, margin = margin(15, 0, 0, 0), face="bold"),
axis.text.y = element_text(size=20, color = "black"),
axis.text.x = element_text(size=26, color = "black", face="bold"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=20, margin = margin(0, 30, 0, 0), face="bold"),
axis.title.x = element_text(size=20, margin = margin(15, 0, 0, 0), face="bold"),
axis.text.y = element_text(size=16, color = "black"),
axis.text.x = element_text(size=20, color = "black"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=20, margin = margin(0, 15, 0, 0), face="bold"),
axis.title.x = element_text(size=20, margin = margin(15, 0, 0, 0), face="bold"),
axis.text.y = element_text(size=16, color = "black"),
axis.text.x = element_text(size=20, color = "black"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=20, margin = margin(0, 15, 0, 0), face="bold"),
axis.title.x = element_text(size=20, margin = margin(15, 0, 0, 0), face="bold"),
axis.text.y = element_text(size=16, color = "black"),
axis.text.x = element_text(size=20, color = "black"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6),
plot.margin=unit(1,"cm"))
queue_graph
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=20, margin = margin(0, 15, 0, 0), face="bold"),
axis.title.x = element_text(size=20, margin = margin(15, 0, 0, 0), face="bold"),
axis.text.y = element_text(size=16, color = "black"),
axis.text.x = element_text(size=20, color = "black"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6),
plot.margin=unit(c(1,1,1,1), "cm"))
queue_graph
library(ggplot2)
dctcp_queue_data <- read.csv(file = "/home/colin/Documents/School/tcp-congestion-control/tests/results/dctcp_queue.csv", na.strings = c("NA"), header = FALSE)
reno_queue_data <- read.csv(file = "/home/colin/Documents/School/tcp-congestion-control/tests/results/reno_queue.csv", na.strings = c("NA"), header = FALSE)
dctcp_start <- dctcp_queue_data[1, 1]
reno_start <- reno_queue_data[1, 1]
dctcp_queue_data[,1] = dctcp_queue_data[,1] - dctcp_start
reno_queue_data[,1] = reno_queue_data[,1] - reno_start
queue_data = data.frame("cong_ctl"=c(rep("reno", length(reno_queue_data[,1])), rep("dctcp", length(dctcp_queue_data[,1]))), "queue_len"=c(reno_queue_data[,2], dctcp_queue_data[,2]), "time"=c(reno_queue_data[,1], dctcp_queue_data[,1]))
queue_graph <- ggplot(queue_data, aes(x=time, y=queue_len, colour = cong_ctl, shape = cong_ctl)) +
geom_line() +
labs(x = "Time (Seconds)", y = "Queue Length") +
coord_cartesian(ylim = c(0, 200)) +
scale_y_continuous(expand = c(0, 0)) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(limits = c("reno", "dctcp"), breaks = c("reno", "dctcp"), values = c("black", "dark gray"), labels = c("TCP Reno", "DCTCP")) +
theme_bw() +
theme(axis.title.y = element_text(size=20, margin = margin(0, 15, 0, 0), face="bold"),
axis.title.x = element_text(size=20, margin = margin(15, 0, 0, 0), face="bold"),
axis.text.y = element_text(size=16, color = "black"),
axis.text.x = element_text(size=20, color = "black"),
axis.ticks = element_line(size=1.6, color = "black"),
legend.text = element_text(size = 20, colour = "black", face = "bold"),
legend.title = element_blank(),
legend.key = element_blank(),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = 'black', size = 1.6),
axis.line.y = element_line(colour = 'black', size = 1.6),
plot.margin=unit(c(.5,.5,.5,.5), "cm"))
queue_graph
setwd("~/Documents/School/tcp-congestion-control/")
library(ggplot2)
source("tests/plots.R")
queue_data <- read.csv(file = "tests/results/queue.csv", header = TRUE)
converg_data <- read.csv(file = "tests/results/converg.csv", header = TRUE)
throughput_data <- read.csv(file = "tests/results/dctcp_k_thru.csv", header=TRUE)
queue_data_2_flow <- subset(queue_data, cong_ctl=='reno_2' | cong_ctl=='dctcp_2')
queue_time_graph(queue_data_2_flow, "paper/figures/queue_2_flows.pdf", save=FALSE)
queue_cdf_graph(queue_data, "paper/figures/queue_cdf.pdf", save=FALSE)
converg_graph(subset(converg_data, cong_ctl == "dctcp"), "paper/figures/dctcp_converg.pdf", save=FALSE)
converg_graph(subset(converg_data, cong_ctl == "reno"), "paper/figures/reno_converg.pdf", save=FALSE)
k_throughput_graph(subset(throughput_data, k <= 60), "paper/figures/k_throughput.pdf", save=FALSE)
setwd("~/Documents/School/tcp-congestion-control/")
library(ggplot2)
source("tests/plots.R")
queue_data <- read.csv(file = "tests/results/queue.csv", header = TRUE)
converg_data <- read.csv(file = "tests/results/converg.csv", header = TRUE)
throughput_data <- read.csv(file = "tests/results/dctcp_k_thru.csv", header=TRUE)
queue_data_2_flow <- subset(queue_data, cong_ctl=='reno_2' | cong_ctl=='dctcp_2')
queue_time_graph(queue_data_2_flow, "paper/figures/queue_2_flows.pdf", save=FALSE)
queue_cdf_graph(queue_data, "paper/figures/queue_cdf.pdf", save=FALSE)
converg_graph(subset(converg_data, cong_ctl == "dctcp"), "paper/figures/dctcp_converg.pdf", save=FALSE)
converg_graph(subset(converg_data, cong_ctl == "reno"), "paper/figures/reno_converg.pdf", save=FALSE)
k_throughput_graph(subset(throughput_data, k <= 60), "paper/figures/k_throughput.pdf", save=FALSE)
k_throughput_graph(subset(throughput_data, k <= 60), "paper/figures/k_throughput.pdf", save=FALSE)
queue_data <- read.csv(file = "tests/results/queue.csv", header = TRUE)
converg_data <- read.csv(file = "tests/results/converg.csv", header = TRUE)
throughput_data <- read.csv(file = "tests/results/dctcp_k_thru.csv", header=TRUE)
# generate graph of queue length over time
queue_data_2_flow <- subset(queue_data, cong_ctl=='reno_2' | cong_ctl=='dctcp_2')
queue_time_graph(queue_data_2_flow, "paper/figures/queue_2_flows.pdf", save=TRUE)
# generate CDF graph of queue length for tests with 2 and 20 flows
queue_cdf_graph(queue_data, "paper/figures/queue_cdf.pdf", save=TRUE)
# generate convergance graph
converg_graph(subset(converg_data, cong_ctl == "dctcp"), "paper/figures/dctcp_converg.pdf", save=TRUE)
converg_graph(subset(converg_data, cong_ctl == "reno"), "paper/figures/reno_converg.pdf", save=TRUE)
# generate throughput graph based on K, no effect after 20 so we can cut it off at k = 60
k_throughput_graph(throughput_data, "paper/figures/k_throughput.pdf", save=FALSE)
